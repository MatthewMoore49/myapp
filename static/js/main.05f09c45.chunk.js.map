{"version":3,"sources":["AddPeople.js","People.js","App.js","reportWebVitals.js","index.js"],"names":["AddPerson","state","name","age","favColor","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","props","addPerson","onSubmit","this","htmlFor","type","onChange","Component","People","people","deletePerson","peopleList","map","person","className","onClick","App","Math","random","filter","console","log","prevProps","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAoCeA,E,4MAjCXC,MAAO,CACHC,KAAM,KACNC,IAAK,KACLC,SAAU,M,EAGdC,aAAe,SAACC,GACZ,EAAKC,SAAL,eACGD,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,S,EAG9BC,aAAe,SAACL,GACZA,EAAEM,iBACF,EAAKC,MAAMC,UAAU,EAAKb,Q,4CAE9B,WACI,OACI,8BACI,uBAAMc,SAAUC,KAAKL,aAArB,UACI,uBAAOM,QAAU,OAAjB,mBACA,uBAAOC,KAAK,OAAOT,GAAK,OAAOU,SAAUH,KAAKX,eAC9C,uBAAOY,QAAU,MAAjB,kBACA,uBAAOC,KAAK,OAAOT,GAAK,MAAMU,SAAUH,KAAKX,eAC7C,uBAAOY,QAAU,WAAjB,uBACA,uBAAOC,KAAK,OAAOT,GAAK,WAAWU,SAAUH,KAAKX,eAClD,qD,GA1BIe,aC2CTC,G,MA3CI,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aAkBhBC,EAAaF,EAAOG,KAAI,SAAAC,GAC1B,OAAOA,EAAOvB,IAAM,GAElB,sBAAKwB,UAAU,SAAf,UAEG,yCAAaD,EAAOxB,QACpB,wCAAYwB,EAAOvB,OACnB,6CAAiBuB,EAAOtB,YACxB,wBAAQwB,QAAU,WAAOL,EAAaG,EAAOjB,KAA7C,6BAL4BiB,EAAOjB,IAWpC,QAIR,OACI,qBAAKkB,UAAU,cAAf,SACGH,MCYGK,E,4MA/Cb5B,MAAQ,CAEJqB,OAAS,CACL,CAACpB,KAAM,SAAUC,IAAI,KAAMC,SAAS,OAAQK,GAAG,GAC/C,CAACP,KAAM,WAAYC,IAAI,KAAMC,SAAS,MAAOK,GAAG,GAChD,CAACP,KAAM,QAASC,IAAI,KAAMC,SAAS,SAAUK,GAAG,K,EAIxDK,UAAY,SAACY,GACTA,EAAOjB,GAAKqB,KAAKC,SACjB,IAAIT,EAAM,sBAAO,EAAKrB,MAAMqB,QAAlB,CAA0BI,IACpC,EAAKnB,SAAS,CACVe,OAAQA,K,EAGhBC,aAAe,SAACd,GAEb,IAAIa,EAAS,EAAKrB,MAAMqB,OAAOU,QAAO,SAAAN,GAClC,OAAOA,EAAOjB,KAAOA,KAG5B,EAAKF,SAAS,CACVe,OAAQA,K,uDAGhB,WACIW,QAAQC,IAAI,uB,gCAEhB,SAAmBC,EAAWC,GAC1BH,QAAQC,IAAI,qBACZD,QAAQC,IAAIC,EAAWC,K,oBAGzB,WACI,OACI,sBAAKT,UAAU,MAAf,UACI,qDACA,mDACA,cAAC,EAAD,CAAQL,OAAQN,KAAKf,MAAMqB,OAAQC,aAAcP,KAAKO,eACtD,cAAC,EAAD,CAAWT,UAAWE,KAAKF,mB,GAzCvBM,aCQHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.05f09c45.chunk.js","sourcesContent":["import React, { Component } from 'react' \r\n\r\nclass AddPerson extends Component {\r\n    state= {\r\n        name: null,\r\n        age: null,\r\n        favColor: null\r\n    }\r\n \r\n    handleChange = (e) => {\r\n        this.setState({\r\n          [e.target.id]: e.target.value  \r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addPerson(this.state)\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor = \"name\">Name:</label>\r\n                    <input type=\"text\" id = \"name\" onChange={this.handleChange}/>\r\n                    <label htmlFor = \"age\">Age:</label>\r\n                    <input type=\"text\" id = \"age\" onChange={this.handleChange}/>\r\n                    <label htmlFor = \"favColor\">favColor:</label>\r\n                    <input type=\"text\" id = \"favColor\" onChange={this.handleChange}/>\r\n                    <button >Submit</button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPerson","import React, { Component } from 'react';\r\nimport './People.css';\r\n    const People = ({people, deletePerson}) => {\r\n      \r\n\r\n     /*const peopleList = people.map(person => {  \r\n           if(person.age>20){\r\n        return(\r\n            <div className=\"person\" key = {person.id}>\r\n                <div>Name: { person.name }</div>\r\n                <div>Age: { person.age }</div>\r\n                <div>favColor: { person.favColor }</div>\r\n            </div>\r\n            \r\n        )\r\n         }else{\r\n             return null\r\n         }\r\n       } );*/ \r\n\r\n       const peopleList = people.map(person => {\r\n           return person.age > 21 ? (\r\n\r\n             <div className=\"person\" key = {person.id}>\r\n\r\n                <div>Name: { person.name }</div>\r\n                <div>Age: { person.age }</div>\r\n                <div>favColor: { person.favColor }</div>\r\n                <button onClick={ () => {deletePerson(person.id)}}>Delete person</button>\r\n\r\n            </div>\r\n                    \r\n                   \r\n\r\n           ) : null \r\n       })\r\n\r\n\r\n       return (\r\n           <div className=\"people-list\">\r\n            { peopleList }\r\n           </div>         \r\n       );\r\n     \r\n}\r\nexport default People;","import React, { Component } from 'react';\nimport AddPerson from \"./AddPeople\";\nimport People from './People'\n\nclass App extends Component  {\n    state = {\n\n        people : [\n            {name: \"Austin\", age:'22', favColor:'blue', id:1},\n            {name: \"Lashonda\", age:'18', favColor:'red', id:2},\n            {name: \"Jamie\", age:'83', favColor:'yellow', id:3}\n\n        ]\n    }\n    addPerson = (person) => {\n        person.id = Math.random();\n        let people = [...this.state.people, person]\n        this.setState({\n            people: people\n        })\n    }\n    deletePerson = (id) => { \n       // console.log(id);\n       let people = this.state.people.filter(person => { \n           return person.id !== id\n       });\n    \n    this.setState({\n        people: people\n    });\n}\ncomponentDidMount(){\n    console.log('component mounted' );\n}\ncomponentDidUpdate(prevProps, prevState){\n    console.log('component updated');\n    console.log(prevProps, prevState);\n}\n\n  render(){\n      return (\n          <div className=\"App\">\n              <h1>My first react app </h1>\n              <p>Hey there Big boy!</p>\n              <People people={this.state.people} deletePerson={this.deletePerson}/> \n              <AddPerson addPerson={this.addPerson} />\n            \n          </div>\n      );\n  }\n  }\n  \n  export default App;\n  \n  \n  \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}